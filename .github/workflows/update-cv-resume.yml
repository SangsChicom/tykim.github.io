name: Overleaf Sync

on:
  schedule:
    - cron: '0 0 * * 0'  # 매주 일요일 자정에 실행
  workflow_dispatch:  # 수동 실행 가능

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          
      - name: Clone CV repository
        run: |
          git clone https://git:${{ secrets.OVERLEAF_TOKEN }}@git.overleaf.com/${{ secrets.OVERLEAF_PROJECT_ID }} overleaf-cv
          
      - name: Clone Resume repository
        run: |
          git clone https://git:${{ secrets.OVERLEAF_TOKEN }}@git.overleaf.com/${{ secrets.OVERLEAF_PROJECT_RESUME }} overleaf-resume
          
      - name: Compile LaTeX documents
        run: |
          # CV 컴파일
          docker run --rm -v $PWD/overleaf-cv:/compile -w /compile registry.gitlab.com/islandoftex/images/texlive:latest bash -c "
            # 필요한 패키지 설치
            PACKAGES=\$(grep -o '\\\\usepackage{[^}]*}' *.tex *.cls 2>/dev/null | sed 's/\\\\usepackage{//g' | sed 's/}//g' | tr ',' '\n' | tr ' ' '\n' | grep -v '^$')
            PACKAGES+=\$(grep -o '\\\\RequirePackage{[^}]*}' *.tex *.cls 2>/dev/null | sed 's/\\\\RequirePackage{//g' | sed 's/}//g' | tr ',' '\n' | tr ' ' '\n' | grep -v '^$')
            
            for pkg in \$PACKAGES; do
              echo \"Installing package: \$pkg\"
              tlmgr install \$pkg || true
            done
            
            # 컴파일러 결정을 위한 패키지 체크
            XETEX_PACKAGES=(
              \"fontspec\"
              \"unicode-math\"
              \"polyglossia\"
              \"xunicode\"
              \"xltxtra\"
              \"realscripts\"
              \"metalogo\"
              \"fontawesome\"
              \"fontawesome5\"
            )
            
            LUATEX_PACKAGES=(
              \"luacode\"
              \"luatexbase\"
              \"luatexja\"
              \"luatexja-fontspec\"
              \"luacolor\"
              \"luainputenc\"
              \"luatex85\"
              \"luatexja-otf\"
            )
            
            # XeTeX 필요 여부 확인
            needs_xetex=false
            for pkg in \"\${XETEX_PACKAGES[@]}\"; do
              if grep -q \"\\\\usepackage{\$pkg}\" *.tex *.cls 2>/dev/null || grep -q \"\\\\RequirePackage{\$pkg}\" *.tex *.cls 2>/dev/null; then
                needs_xetex=true
                break
              fi
            done
            
            # LuaTeX 필요 여부 확인
            needs_luatex=false
            for pkg in \"\${LUATEX_PACKAGES[@]}\"; do
              if grep -q \"\\\\usepackage{\$pkg}\" *.tex *.cls 2>/dev/null || grep -q \"\\\\RequirePackage{\$pkg}\" *.tex *.cls 2>/dev/null; then
                needs_luatex=true
                break
              fi
            done
            
            # 컴파일러 선택 및 실행
            if \$needs_luatex; then
              echo \"Using LuaLaTeX\"
              lualatex main.tex
              lualatex main.tex
            elif \$needs_xetex; then
              echo \"Using XeLaTeX\"
              xelatex main.tex
              xelatex main.tex
            else
              echo \"Using pdfLaTeX\"
              pdflatex main.tex
              pdflatex main.tex
            fi
          "
          
          # Resume 컴파일
          docker run --rm -v $PWD/overleaf-resume:/compile -w /compile registry.gitlab.com/islandoftex/images/texlive:latest bash -c "
            # 필요한 패키지 설치
            PACKAGES=\$(grep -o '\\\\usepackage{[^}]*}' *.tex *.cls 2>/dev/null | sed 's/\\\\usepackage{//g' | sed 's/}//g' | tr ',' '\n' | tr ' ' '\n' | grep -v '^$')
            PACKAGES+=\$(grep -o '\\\\RequirePackage{[^}]*}' *.tex *.cls 2>/dev/null | sed 's/\\\\RequirePackage{//g' | sed 's/}//g' | tr ',' '\n' | tr ' ' '\n' | grep -v '^$')
            
            for pkg in \$PACKAGES; do
              echo \"Installing package: \$pkg\"
              tlmgr install \$pkg || true
            done
            
            # 컴파일러 결정을 위한 패키지 체크
            XETEX_PACKAGES=(
              \"fontspec\"
              \"unicode-math\"
              \"polyglossia\"
              \"xunicode\"
              \"xltxtra\"
              \"realscripts\"
              \"metalogo\"
              \"fontawesome\"
              \"fontawesome5\"
            )
            
            LUATEX_PACKAGES=(
              \"luacode\"
              \"luatexbase\"
              \"luatexja\"
              \"luatexja-fontspec\"
              \"luacolor\"
              \"luainputenc\"
              \"luatex85\"
              \"luatexja-otf\"
            )
            
            # XeTeX 필요 여부 확인
            needs_xetex=false
            for pkg in \"\${XETEX_PACKAGES[@]}\"; do
              if grep -q \"\\\\usepackage{\$pkg}\" *.tex *.cls 2>/dev/null || grep -q \"\\\\RequirePackage{\$pkg}\" *.tex *.cls 2>/dev/null; then
                needs_xetex=true
                break
              fi
            done
            
            # LuaTeX 필요 여부 확인
            needs_luatex=false
            for pkg in \"\${LUATEX_PACKAGES[@]}\"; do
              if grep -q \"\\\\usepackage{\$pkg}\" *.tex *.cls 2>/dev/null || grep -q \"\\\\RequirePackage{\$pkg}\" *.tex *.cls 2>/dev/null; then
                needs_luatex=true
                break
              fi
            done
            
            # 컴파일러 선택 및 실행
            if \$needs_luatex; then
              echo \"Using LuaLaTeX\"
              lualatex main.tex
              lualatex main.tex
            elif \$needs_xetex; then
              echo \"Using XeLaTeX\"
              xelatex main.tex
              xelatex main.tex
            else
              echo \"Using pdfLaTeX\"
              pdflatex main.tex
              pdflatex main.tex
            fi
          "
          
      - name: Copy PDFs
        run: |
          mkdir -p static
          cp overleaf-cv/main.pdf static/cv.pdf
          cp overleaf-resume/main.pdf static/resume.pdf
          
      - name: Commit and push if changed
        run: |
          git add static/cv.pdf static/resume.pdf
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update CV and Resume from Overleaf" && git push)
